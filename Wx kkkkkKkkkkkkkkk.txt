local EXPECTED_PLACE_ID = 109983668079237
local player = game.Players.LocalPlayer

if game.PlaceId == EXPECTED_PLACE_ID then
    print("ok")
else
    player:Kick("wrong place")
end


-- Servi√ßos
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- RedzMagnus V5
local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/wx-sources/Redzmagnusv5/refs/heads/main/RedzV5.Lua.txt"))()

-- Cria a janela
local Window = redzlib:MakeWindow({
Title = "üåå Nytherune Hub + üåå - Spydersammy's game Script 2025",
SubTitle = "by Nytherune Developers",
SaveFolder = "base_manager"
})

-- Tabs
local TabInfo = Window:MakeTab({Title = "Info", Icon = "info"})
local TabBases = Window:MakeTab({Title = "Scripts das bases", Icon = "cherry"})
local TabItens = Window:MakeTab({Title = "Itens do jogo", Icon = "star"}) -- Nova tabela


TabInfo:AddParagraph({"Script de Steal a brainrot se divirta!"})
local executor = identifyexecutor()
TabInfo:AddParagraph({"Seu executor atual √© o " .. executor})

-- Se√ß√£o Scripts
TabBases:AddSection("Scripts")

-- Coordenadas das bases
local Bases = {
["Selecionar base 1"] = Vector3.new(-331, -4, -99),
["Selecionar base 2"] = Vector3.new(-485, -4, 221),
["Selecionar base 3"] = Vector3.new(-332, -4, 222),
["Selecionar base 4"] = Vector3.new(-492, -4, 6),
["Selecionar base 5"] = Vector3.new(-493, -4, -99),
["Selecionar base 6"] = Vector3.new(-328, -4, -101),
["Selecionar base 7"] = Vector3.new(-328, -4, 113),
["Selecionar base 8"] = Vector3.new(-489, -4, 113)
}

-- Vari√°veis
local selectedBase = nil
local loopTeleport = false
local loopTeleportDetected = false
local userBase = nil
local buttonsCreated = false
local cameraLoop = false
local rotationAngle = 0
local rotationSpeed = math.rad(30) -- 30¬∞ por segundo

-- Fun√ß√£o TweenTeleport
local function TweenTeleport(position)
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
local HRP = LocalPlayer.Character.HumanoidRootPart
local tweenSpeed = (position == userBase) and 0.5 or 2
local tween = TweenService:Create(HRP, TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(position)})
tween:Play()
end
end

-- Fun√ß√£o DetectClosestBase
local function DetectClosestBase()
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
local HRP = LocalPlayer.Character.HumanoidRootPart
local closestDistance = math.huge
local closestBase = nil
for name, pos in pairs(Bases) do
local dist = (HRP.Position - pos).Magnitude
if dist < closestDistance then
closestDistance = dist
closestBase = pos
end
end
return closestBase
end
end

-- Fun√ß√£o ShowNotification
local function ShowNotification(text)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")  
Frame.Parent = ScreenGui  
Frame.Size = UDim2.new(0.4,0,0.08,0)  
Frame.Position = UDim2.new(0.3,0,0.1,0)  
Frame.BackgroundTransparency = 0.5  
Frame.BackgroundColor3 = Color3.fromRGB(0,0,0)  
Frame.BorderSizePixel = 2  

local UIStroke = Instance.new("UIStroke")  
UIStroke.Parent = Frame  
UIStroke.Color = Color3.new(0,0,0)  
UIStroke.Thickness = 2  

local Label = Instance.new("TextLabel")  
Label.Parent = Frame  
Label.Size = UDim2.new(1,0,1,0)  
Label.BackgroundTransparency = 1  
Label.Text = text  
Label.TextColor3 = Color3.new(1,1,1)  
Label.TextScaled = true  
Label.Font = Enum.Font.BuilderSansBold  

task.wait(2)  
ScreenGui:Destroy()

end

-- Atualiza√ß√£o da c√¢mera com giro autom√°tico
RunService.RenderStepped:Connect(function(deltaTime)
if cameraLoop and selectedBase then
rotationAngle = rotationAngle + rotationSpeed * deltaTime
local offset = Vector3.new(0, 10, 20)
local rotatedOffset = CFrame.Angles(0, rotationAngle, 0) * CFrame.new(offset)
Camera.CameraType = Enum.CameraType.Scriptable
Camera.CFrame = CFrame.new(selectedBase + rotatedOffset.Position, selectedBase)
end
end)

-- Dropdown para selecionar base
TabBases:AddDropdown({
Name = "Selecionar Base",
Options = {"Selecionar base 1", "Selecionar base 2", "Selecionar base 3", "Selecionar base 4", "Selecionar base 5", "Selecionar base 6", "Selecionar base 7", "Selecionar base 8"},
Callback = function(Value)
selectedBase = Bases[Value]
end
})

-- Toggle para ver base
TabBases:AddToggle({
Name = "Ver base selecionada",
Default = false,
Callback = function(Value)
cameraLoop = Value
if not Value then
Camera.CameraType = Enum.CameraType.Custom
end
end
})

-- Bot√£o Teleportar pra base
TabBases:AddButton({
Name = "Teleportar pra base",
Callback = function()
if selectedBase then
TweenTeleport(selectedBase)
end
end
})

-- Toggle Teleportar em Loop
TabBases:AddToggle({
Name = "Teleportar em Loop pra base",
Default = false,
Callback = function(Value)
loopTeleport = Value
task.spawn(function()
while loopTeleport do
if selectedBase then
TweenTeleport(selectedBase)
end
task.wait(3)
end
end)
end
})

-- Fun√ß√£o "voar/nadar" at√© uma posi√ß√£o usando MoveTo
local function FlyToBase_MoveTo(targetPos)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local Humanoid = LocalPlayer.Character.Humanoid
        
        -- for√ßa estado nadando
        Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)

        -- remove animador temporariamente
        local animator = Humanoid:FindFirstChildOfClass("Animator")
        if animator then
            animator:Destroy()
        end

        -- move at√© a posi√ß√£o
        Humanoid:MoveTo(targetPos)
        Humanoid.MoveToFinished:Wait()

        -- recria o animador para restaurar anima√ß√µes
        if Humanoid and Humanoid:FindFirstChild("Animator") == nil then
            Instance.new("Animator", Humanoid)
        end
    end
end

-- ====== Bot√£o: Voo/Nado at√© base selecionada ======
TabBases:AddButton({
    Name = "Tween voar at√© a base", -- Nome segue seu pedido
    Callback = function()
        if selectedBase then
            FlyToBase_MoveTo(selectedBase)
        else
            ShowNotification("Selecione uma base primeiro!")
        end
    end
})

TabBases:AddSection("Scripts brainrots")

TabBases:AddButton({
Name = "Colocar brainrot na m√°quina de mistura",
Callback = function()
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") then
local hs = LocalPlayer.Character.Humanoid.WalkSpeed
if hs > 22 then
ShowNotification("Voc√™ precisa pegar um brainrot da sua base!")
else
local Humanoid = LocalPlayer.Character.Humanoid
local targetPos = Vector3.new(-390, -6, 77)
Humanoid:MoveTo(targetPos)
Humanoid.MoveToFinished:Wait()
end
end
end
})

-- Se√ß√£o "Sua base"
TabBases:AddSection("Sua base")

TabBases:AddButton({
Name = "Detectar sua base",
Callback = function()
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
LocalPlayer.Character.Humanoid.Health = 0
LocalPlayer.CharacterAdded:Wait()
task.wait(1)
userBase = DetectClosestBase()

if userBase and not buttonsCreated then  
            buttonsCreated = true  
            TabBases:AddButton({  
                Name = "Teleportar pra sua base",  
                Callback = function()  
                    TweenTeleport(userBase)  
                end  
            })  

            TabBases:AddToggle({  
                Name = "Teleportar Loops pra sua base",  
                Default = false,  
                Callback = function(Value)  
                    loopTeleportDetected = Value  
                    task.spawn(function()  
                        while loopTeleportDetected do  
                            TweenTeleport(userBase)  
                            task.wait(3)  
                        end  
                    end)  
                end  
            })  
        end  
    end  
end

})

TabBases:AddButton({
    Name = "Tween voar at√© sua base",
    Callback = function()
        if userBase then
            FlyToBase_MoveTo(userBase)
        else
            ShowNotification("Detecte sua base primeiro!")
        end
    end
})

-- ===== Nova Tabela: Itens do jogo =====
TabItens:AddSection("Auto click")

-- Vari√°veis Auto Click
local autoClickEnabled = false

-- Toggle Auto hit jogadores
TabItens:AddToggle({
Name = "Auto hit jogadores",
Default = false,
Callback = function(Value)
autoClickEnabled = Value
end
})

-- Fun√ß√£o que realiza cliques autom√°ticos
task.spawn(function()
while true do
if autoClickEnabled then
local VirtualUser = game:GetService("VirtualUser")
VirtualUser:ClickButton1(Vector2.new(0,0))
wait(0.25)
VirtualUser:ClickButton1(Vector2.new(0,0))
wait(0.25)
else
wait(0.1)
end
end
end)

-- ===== Nova Se√ß√£o: Dupe tools =====
TabItens:AddSection("Dupe tools")

TabItens:AddButton({
Name = "Dupar todas as tools do jogo",
Callback = function()
local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local playerGui = player:WaitForChild("PlayerGui")

-- Fun√ß√£o para efeito visual tempor√°rio  
    local function showDupingEffect()  
        local blur = Instance.new("BlurEffect")  
        blur.Size = 10  
        blur.Parent = game.Lighting  

        local screenGui = Instance.new("ScreenGui")  
        screenGui.ResetOnSpawn = false  
        screenGui.Parent = playerGui  

        local textLabel = Instance.new("TextLabel")  
        textLabel.Size = UDim2.new(1, 0, 1, 0)  
        textLabel.BackgroundTransparency = 1  
        textLabel.Text = "Dupando tools..."  
        textLabel.Font = Enum.Font.BuilderSansBold  
        textLabel.TextScaled = true  
        textLabel.TextColor3 = Color3.new(1, 1, 1)  
        textLabel.Parent = screenGui  

        task.wait(1)  

        blur:Destroy()  
        screenGui:Destroy()  
    end  

    -- Fun√ß√£o para coletar todas as tools  
    local function collectAllTools()  
        showDupingEffect()  
        for _, tool in pairs(game:GetDescendants()) do  
            if tool:IsA("Tool") then  
                local clonedTool = tool:Clone()  
                clonedTool.Parent = backpack  
            end  
        end  
    end  

    -- Executa a duplica√ß√£o  
    collectAllTools()  
end

})

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

-- Configura√ß√µes
local altura = 20  -- Quanto vai subir/baixar
local tempo = 2    -- Dura√ß√£o do tween
local tweenInfo = TweenInfo.new(
    tempo,
    Enum.EasingStyle.Linear,
    Enum.EasingDirection.Out
)

local player = Players.LocalPlayer

-- Fun√ß√£o de mover Ground
local function moverGround(part, yOffset)
    local destino = {CFrame = part.CFrame * CFrame.new(0, yOffset, 0)}
    local tween = TweenService:Create(part, tweenInfo, destino)
    tween:Play()
end

-- Espera o workspace carregar
task.wait(3)

-- Encontrar todos os Grounds
local grounds = {}
for _, part in ipairs(workspace:GetDescendants()) do
    if part:IsA("BasePart") and part.Name == "Ground" then
        table.insert(grounds, part)
    end
end

-- ===== Fun√ß√µes Up/Down acionadas pelos bot√µes =====
local function subirGrounds()
    for _, ground in ipairs(grounds) do
        moverGround(ground, altura)
    end
end

local function descerGrounds()
    for _, ground in ipairs(grounds) do
        moverGround(ground, -altura)
    end
end

-- ===== UI: Aba Desync =====
local TabDesync = Window:MakeTab({
    Title = "Desync",
    Icon = "wifi"
})

TabDesync:AddSection("Desync")

TabDesync:AddButton({
    Name = "Desync (Up)",
    Callback = function()
        subirGrounds()
    end
})

TabDesync:AddButton({
    Name = "Desync (Down)",
    Callback = function()
        descerGrounds()
    end
})
